worker_processes 4;

events {
    worker_connections  1024;
}

http {
    include         /etc/nginx/mime.types;
    default_type    application/octet-stream;
    sendfile        on;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';


    # upstream 블록에서 프록시 서버가 요청을 받을 서버를 지정합니다.
    # docker-compose.yml 에서 지정한 서비스 이름을 사용합니다.
    upstream front_server {
        server front:3002;
    }

    upstream socket_server {
        server socket:3001;
    }

    upstream file_server {
        server files:3003;
    }
    
    upstream auth_server {
        server auth:3000;
    }

    server {
        listen 80;
        listen [::]:80;

        
        sendfile            on;
        proxy_http_version  1.1;
        proxy_set_header    Host                $host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;

        # socket.io를 사용하는 socket_server에 대한 프록시 설정입니다.
        location /socket.io/ {
            proxy_pass          http://socket_server;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /file {
            proxy_pass          http://file_server;
        }

        location /auth {
            proxy_pass          http://auth_server;
        }

        location / {
            proxy_pass          http://front_server;
        }

        #db 서버에 대한 프록시는 따로 설정하지 않습니다.
        #db 서버는 외부에서 접근할 필요가 없기 때문입니다.
    }
}